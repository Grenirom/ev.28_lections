# psql - заходит в Postgres

#\l - выводит все имеющиеся базы данных

# CREATE DATABASE test(Ваше название бд, указывать без ковычек); - команда, которая создает новую бд, в конце после каждой команды обязательно точка с запятой

#\c test(Вместо test название бд к которой хотите подключиться, так-же без ковычек) - команда для подключения к бд

#\d name - подробная информация про таблицу (нужно заранее подключиться к таблице)

#\dt - комада для вывода всех таблиц в бд

# DROP DATABASE test; (вместо тест название вашей бд которую хотите удалить) - команда для удаления бд

#\du - Выводит список всех юзеров в таблице 

# CREATE USER test WITH PASSWORD '1'; - команда которая создает нового юзера

# ALTER ROLE test WITH SUPERUSER;
 
# GRANT ALL PRIVELEGES ON DATABASE test TO test(Вместо тест название вашей бд и юзера которому передаются все привелегии) - Команда для того, чтобы дать все привелегии указанному юзеру

# CREATE DATABASE (название бд без ковычек) WITH OWNER (Название owner'a); - Команда которая создает бд с указанным юзером в роли владельца(owner'a)

#DROP ROLE (имя юзера) - Команда которая удаляет юзера
#----------------------------------------------------
#                   DATA TYPES
# 1. Numeric types(smallint, integer, bigint, serial) - serial это тип данных, автоинкремент
#2. Character types
    # 1)character varying(n) - обычный аналог str, имеет заданный нами лимит по кол-ву символов
    # 2)varchar(n) - то же самое
    # 3)character(n)
    # 4)char(n)
    # 5)text - безлимитное кол- во символов
#----------------------------------------------------#                   СОЗДАНИЕ ТАБЛИЦ
# CREATE TABLE (Название таблицы(Параметры/столбцы)); - команда которая создает таблицу
# При создании таблицы, в качестве параметров надо передать название столбца, а затем тип данных, и ограничение(если оно есть)

#\d (Название класса) - Команда для того, чтобы посмотреть таблицу детально

# INSERT INTO (Название таблицы) ()/ VALUES () - команда для добавления элементов в таблицу, можно указать записи куда пойдут все значения после VALUES, а можно не указывать, и просто после VALUES указать значения которые пойдут в столбцы по порядку

#SELECT * FROM (откуда взять инфу); - команда которая выводит все значения с указанного места. "*" означает all
#       ПРИМЕРНЫЙ ВЫВОД ПОСЛЕ ИСПОЛЬЗОВАНИЯ КОМАНДЫ:
# user=# INSERT INTO person (name, last_name, age) VALUES ('John', 'Snow', 34);
# INSERT 0 1
# user=# select * from person;
#  id | name | last_name | age 
# ----+------+-----------+-----
#   0 | John | Snow      |  34
#   1 | John | Snow      |  34
# (2 rows)

# В INSERT можно через запятую и новые скобки передавать сразу несколько значений чтобы не повторять одну и ту же команду много раз для добавления столбцов

#Так-же в SELECT FROM МОЖНО ВМЕСТО "*" передать конкретные колонны которые нам нужны, к примеру:      SELECT name, last_name FROM person;

#--------------------------------------------------------------------------
# Команда для создания таблицы - CREATE TABLE <table name>
#-----------------------------------------------------------------------
#Команда для добавления данных в таблицу - INSERT INTO tablename [(column)] VALUES (data), (data) 